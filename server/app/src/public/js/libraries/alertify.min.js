/*! alertifyjs - v1.11.4 - Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) */
!(function (a) {
    function b(a, b) { a.className += ` ${b}`; } function c(a, b) { for (var c = a.className.split(" "), d = b.split(" "), e = 0; e < d.length; e += 1) { const f = c.indexOf(d[e]); f > -1 && c.splice(f, 1); }a.className = c.join(" "); } function d() { return a.getComputedStyle(document.body).direction === "rtl"; } function e() { return document.documentElement && document.documentElement.scrollTop || document.body.scrollTop; } function f() { return document.documentElement && document.documentElement.scrollLeft || document.body.scrollLeft; } function g(a) { for (;a.lastChild;)a.removeChild(a.lastChild); } function h(a) { if (a === null) return a; let b; if (Array.isArray(a)) { b = []; for (let c = 0; c < a.length; c += 1)b.push(h(a[c])); return b; } if (a instanceof Date) return new Date(a.getTime()); if (a instanceof RegExp) return b = new RegExp(a.source), b.global = a.global, b.ignoreCase = a.ignoreCase, b.multiline = a.multiline, b.lastIndex = a.lastIndex, b; if (typeof a === "object") { b = {}; for (const d in a)a.hasOwnProperty(d) && (b[d] = h(a[d])); return b; } return a; } function i(a, b) { if (a.elements) { const c = a.elements.root; c.parentNode.removeChild(c), delete a.elements, a.settings = h(a.__settings), a.__init = b, delete a.__internal; } } function j(a, b) { return function () { if (arguments.length > 0) { for (var c = [], d = 0; d < arguments.length; d += 1)c.push(arguments[d]); return c.push(a), b.apply(a, c); } return b.apply(a, [null, a]); }; } function k(a, b) { return { index: a, button: b, cancel: !1 }; } function l(a, b) { if (typeof b.get(a) === "function") return b.get(a).call(b); } function m() {
        function a(a, b) { for (const c in b)b.hasOwnProperty(c) && (a[c] = b[c]); return a; } function b(a) { const b = d[a].dialog; return b && typeof b.__init === "function" && b.__init(b), b; } function c(b, c, e, f) { const g = { dialog: null, factory: c }; return void 0 !== f && (g.factory = function () { return a(new d[f].factory(), new c()); }), e || (g.dialog = a(new g.factory(), t)), d[b] = g; } var d = {}; return {
            defaults: o, dialog(d, e, f, g) { if (typeof e !== "function") return b(d); if (this.hasOwnProperty(d)) throw new Error("alertify.dialog: name already exists"); const h = c(d, e, f, g); this[d] = f ? function () { if (arguments.length === 0) return h.dialog; const b = a(new h.factory(), t); return b && typeof b.__init === "function" && b.__init(b), b.main.apply(b, arguments), b.show.apply(b); } : function () { if (h.dialog && typeof h.dialog.__init === "function" && h.dialog.__init(h.dialog), arguments.length === 0) return h.dialog; const a = h.dialog; return a.main.apply(h.dialog, arguments), a.show.apply(h.dialog); }; }, closeAll(a) { for (let b = p.slice(0), c = 0; c < b.length; c += 1) { const d = b[c]; void 0 !== a && a === d || d.close(); } }, setting(a, c, d) { if (a === "notifier") return u.setting(c, d); const e = b(a); return e ? e.setting(c, d) : void 0; }, set(a, b, c) { return this.setting(a, b, c); }, get(a, b) { return this.setting(a, b); }, notify(a, b, c, d) { return u.create(b, d).push(a, c); }, message(a, b, c) { return u.create(null, c).push(a, b); }, success(a, b, c) { return u.create("success", c).push(a, b); }, error(a, b, c) { return u.create("error", c).push(a, b); }, warning(a, b, c) { return u.create("warning", c).push(a, b); }, dismissAll() { u.dismissAll(); },
        };
    } const n = {
        ENTER: 13, ESC: 27, F1: 112, F12: 123, LEFT: 37, RIGHT: 39,
    }; var o = {
        autoReset: !0,
        basic: !1,
        closable: !0,
        closableByDimmer: !0,
        frameless: !1,
        maintainFocus: !0,
        maximizable: !0,
        modal: !0,
        movable: !0,
        moveBounded: !1,
        overflow: !0,
        padding: !0,
        pinnable: !0,
        pinned: !0,
        preventBodyShift: !1,
        resizable: !0,
        startMaximized: !1,
        transition: "pulse",
        notifier: { delay: 5, position: "bottom-right", closeButton: !1 },
        glossary: {
            title: "AlertifyJS", ok: "OK", cancel: "Cancel", acccpt: "Accept", deny: "Deny", confirm: "Confirm", decline: "Decline", close: "Close", maximize: "Maximize", restore: "Restore",
        },
        theme: { input: "ajs-input", ok: "ajs-ok", cancel: "ajs-cancel" },
    }; var p = []; const q = (function () { return document.addEventListener ? function (a, b, c, d) { a.addEventListener(b, c, !0 === d); } : document.attachEvent ? function (a, b, c) { a.attachEvent(`on${b}`, c); } : void 0; }()); const r = (function () { return document.removeEventListener ? function (a, b, c, d) { a.removeEventListener(b, c, !0 === d); } : document.detachEvent ? function (a, b, c) { a.detachEvent(`on${b}`, c); } : void 0; }()); const s = (function () {
        let a; let b; let c = !1; const d = {
            animation: "animationend", OAnimation: "oAnimationEnd oanimationend", msAnimation: "MSAnimationEnd", MozAnimation: "animationend", WebkitAnimation: "webkitAnimationEnd",
        }; for (a in d) if (void 0 !== document.documentElement.style[a]) { b = d[a], c = !0; break; } return { type: b, supported: c };
    }()); var t = (function () {
        function m(a) {
            if (!a.__internal) {
                delete a.__init, a.__settings || (a.__settings = h(a.settings)); let c; typeof a.setup === "function" ? (c = a.setup(), c.options = c.options || {}, c.focus = c.focus || {}) : c = { buttons: [], focus: { element: null, select: !1 }, options: {} }, typeof a.hooks !== "object" && (a.hooks = {}); const d = []; if (Array.isArray(c.buttons)) for (let e = 0; e < c.buttons.length; e += 1) { const f = c.buttons[e]; const g = {}; for (const i in f)f.hasOwnProperty(i) && (g[i] = f[i]); d.push(g); } const k = a.__internal = {
                    isOpen: !1,
                    activeElement: document.body,
                    timerIn: void 0,
                    timerOut: void 0,
                    buttons: d,
                    focus: c.focus,
                    options: {
                        title: void 0, modal: void 0, basic: void 0, frameless: void 0, pinned: void 0, movable: void 0, moveBounded: void 0, resizable: void 0, autoReset: void 0, closable: void 0, closableByDimmer: void 0, maximizable: void 0, startMaximized: void 0, pinnable: void 0, transition: void 0, padding: void 0, overflow: void 0, onshow: void 0, onclosing: void 0, onclose: void 0, onfocus: void 0, onmove: void 0, onmoved: void 0, onresize: void 0, onresized: void 0, onmaximize: void 0, onmaximized: void 0, onrestore: void 0, onrestored: void 0,
                    },
                    resetHandler: void 0,
                    beginMoveHandler: void 0,
                    beginResizeHandler: void 0,
                    bringToFrontHandler: void 0,
                    modalClickHandler: void 0,
                    buttonsClickHandler: void 0,
                    commandsClickHandler: void 0,
                    transitionInHandler: void 0,
                    transitionOutHandler: void 0,
                    destroy: void 0,
                }; const l = {}; l.root = document.createElement("div"), l.root.style.display = "none", l.root.className = `${Da.base} ${Da.hidden} `, l.root.innerHTML = Ca.dimmer + Ca.modal, l.dimmer = l.root.firstChild, l.modal = l.root.lastChild, l.modal.innerHTML = Ca.dialog, l.dialog = l.modal.firstChild, l.dialog.innerHTML = Ca.reset + Ca.commands + Ca.header + Ca.body + Ca.footer + Ca.resizeHandle + Ca.reset, l.reset = [], l.reset.push(l.dialog.firstChild), l.reset.push(l.dialog.lastChild), l.commands = {}, l.commands.container = l.reset[0].nextSibling, l.commands.pin = l.commands.container.firstChild, l.commands.maximize = l.commands.pin.nextSibling, l.commands.close = l.commands.maximize.nextSibling, l.header = l.commands.container.nextSibling, l.body = l.header.nextSibling, l.body.innerHTML = Ca.content, l.content = l.body.firstChild, l.footer = l.body.nextSibling, l.footer.innerHTML = Ca.buttons.auxiliary + Ca.buttons.primary, l.resizeHandle = l.footer.nextSibling, l.buttons = {}, l.buttons.auxiliary = l.footer.firstChild, l.buttons.primary = l.buttons.auxiliary.nextSibling, l.buttons.primary.innerHTML = Ca.button, l.buttonTemplate = l.buttons.primary.firstChild, l.buttons.primary.removeChild(l.buttonTemplate); for (let m = 0; m < a.__internal.buttons.length; m += 1) { const n = a.__internal.buttons[m]; ya.indexOf(n.key) < 0 && ya.push(n.key), n.element = l.buttonTemplate.cloneNode(), n.element.innerHTML = n.text, typeof n.className === "string" && n.className !== "" && b(n.element, n.className); for (const o in n.attrs)o !== "className" && n.attrs.hasOwnProperty(o) && n.element.setAttribute(o, n.attrs[o]); n.scope === "auxiliary" ? l.buttons.auxiliary.appendChild(n.element) : l.buttons.primary.appendChild(n.element); }a.elements = l, k.resetHandler = j(a, X), k.beginMoveHandler = j(a, aa), k.beginResizeHandler = j(a, ga), k.bringToFrontHandler = j(a, B), k.modalClickHandler = j(a, R), k.buttonsClickHandler = j(a, T), k.commandsClickHandler = j(a, F), k.transitionInHandler = j(a, Y), k.transitionOutHandler = j(a, Z); for (const p in k.options) void 0 !== c.options[p] ? a.set(p, c.options[p]) : v.defaults.hasOwnProperty(p) ? a.set(p, v.defaults[p]) : p === "title" && a.set(p, v.defaults.glossary[p]); typeof a.build === "function" && a.build();
            }document.body.appendChild(a.elements.root);
        } function o() { wa = f(), xa = e(); } function t() { a.scrollTo(wa, xa); } function u() { for (var a = 0, d = 0; d < p.length; d += 1) { const e = p[d]; (e.isModal() || e.isMaximized()) && (a += 1); }a === 0 && document.body.className.indexOf(Da.noOverflow) >= 0 ? (c(document.body, Da.noOverflow), w(!1)) : a > 0 && document.body.className.indexOf(Da.noOverflow) < 0 && (w(!0), b(document.body, Da.noOverflow)); } function w(d) { v.defaults.preventBodyShift && (d && document.documentElement.scrollHeight > document.documentElement.clientHeight ? (Fa = xa, Ea = a.getComputedStyle(document.body).top, b(document.body, Da.fixed), document.body.style.top = `${-xa}px`) : d || (xa = Fa, document.body.style.top = Ea, c(document.body, Da.fixed), t())); } function x(a, d, e) { typeof e === "string" && c(a.elements.root, Da.prefix + e), b(a.elements.root, Da.prefix + d), za = a.elements.root.offsetWidth; } function y(a) { a.get("modal") ? (c(a.elements.root, Da.modeless), a.isOpen() && (pa(a), N(a), u())) : (b(a.elements.root, Da.modeless), a.isOpen() && (oa(a), N(a), u())); } function z(a) { a.get("basic") ? b(a.elements.root, Da.basic) : c(a.elements.root, Da.basic); } function A(a) { a.get("frameless") ? b(a.elements.root, Da.frameless) : c(a.elements.root, Da.frameless); } function B(a, b) { for (let c = p.indexOf(b), d = c + 1; d < p.length; d += 1) if (p[d].isModal()) return; return document.body.lastChild !== b.elements.root && (document.body.appendChild(b.elements.root), p.splice(p.indexOf(b), 1), p.push(b), W(b)), !1; } function C(a, d, e, f) { switch (d) { case "title": a.setHeader(f); break; case "modal": y(a); break; case "basic": z(a); break; case "frameless": A(a); break; case "pinned": O(a); break; case "closable": Q(a); break; case "maximizable": P(a); break; case "pinnable": K(a); break; case "movable": ea(a); break; case "resizable": ka(a); break; case "padding": f ? c(a.elements.root, Da.noPadding) : a.elements.root.className.indexOf(Da.noPadding) < 0 && b(a.elements.root, Da.noPadding); break; case "overflow": f ? c(a.elements.root, Da.noOverflow) : a.elements.root.className.indexOf(Da.noOverflow) < 0 && b(a.elements.root, Da.noOverflow); break; case "transition": x(a, f, e); } typeof a.hooks.onupdate === "function" && a.hooks.onupdate.call(a, d, e, f); } function D(a, b, c, d, e) { const f = { op: void 0, items: [] }; if (void 0 === e && typeof d === "string")f.op = "get", b.hasOwnProperty(d) ? (f.found = !0, f.value = b[d]) : (f.found = !1, f.value = void 0); else { let g; if (f.op = "set", typeof d === "object") { const h = d; for (const i in h)b.hasOwnProperty(i) ? (b[i] !== h[i] && (g = b[i], b[i] = h[i], c.call(a, i, g, h[i])), f.items.push({ key: i, value: h[i], found: !0 })) : f.items.push({ key: i, value: h[i], found: !1 }); } else { if (typeof d !== "string") throw new Error("args must be a string or object"); b.hasOwnProperty(d) ? (b[d] !== e && (g = b[d], b[d] = e, c.call(a, d, g, e)), f.items.push({ key: d, value: e, found: !0 })) : f.items.push({ key: d, value: e, found: !1 }); } } return f; } function E(a) { let b; S(a, (a) => b = !0 === a.invokeOnClose), !b && a.isOpen() && a.close(); } function F(a, b) { switch (a.srcElement || a.target) { case b.elements.commands.pin: b.isPinned() ? H(b) : G(b); break; case b.elements.commands.maximize: b.isMaximized() ? J(b) : I(b); break; case b.elements.commands.close: E(b); } return !1; } function G(a) { a.set("pinned", !0); } function H(a) { a.set("pinned", !1); } function I(a) { l("onmaximize", a), b(a.elements.root, Da.maximized), a.isOpen() && u(), l("onmaximized", a); } function J(a) { l("onrestore", a), c(a.elements.root, Da.maximized), a.isOpen() && u(), l("onrestored", a); } function K(a) { a.get("pinnable") ? b(a.elements.root, Da.pinnable) : c(a.elements.root, Da.pinnable); } function L(a) { const b = f(); a.elements.modal.style.marginTop = `${e()}px`, a.elements.modal.style.marginLeft = `${b}px`, a.elements.modal.style.marginRight = `${-b}px`; } function M(a) { const b = parseInt(a.elements.modal.style.marginTop, 10); const c = parseInt(a.elements.modal.style.marginLeft, 10); if (a.elements.modal.style.marginTop = "", a.elements.modal.style.marginLeft = "", a.elements.modal.style.marginRight = "", a.isOpen()) { let d = 0; let g = 0; a.elements.dialog.style.top !== "" && (d = parseInt(a.elements.dialog.style.top, 10)), a.elements.dialog.style.top = `${d + (b - e())}px`, a.elements.dialog.style.left !== "" && (g = parseInt(a.elements.dialog.style.left, 10)), a.elements.dialog.style.left = `${g + (c - f())}px`; } } function N(a) { a.get("modal") || a.get("pinned") ? M(a) : L(a); } function O(a) { a.get("pinned") ? (c(a.elements.root, Da.unpinned), a.isOpen() && M(a)) : (b(a.elements.root, Da.unpinned), a.isOpen() && !a.isModal() && L(a)); } function P(a) { a.get("maximizable") ? b(a.elements.root, Da.maximizable) : c(a.elements.root, Da.maximizable); } function Q(a) { a.get("closable") ? (b(a.elements.root, Da.closable), ua(a)) : (c(a.elements.root, Da.closable), va(a)); } function R(a, b) { if (a.timeStamp - Ha > 200 && (Ha = a.timeStamp) && !Ga) { const c = a.srcElement || a.target; return !0 === b.get("closableByDimmer") && c === b.elements.modal && E(b), Ga = !1, !1; } } function S(a, b) { if (Date.now() - Ia > 200 && (Ia = Date.now())) for (let c = 0; c < a.__internal.buttons.length; c += 1) { const d = a.__internal.buttons[c]; if (!d.element.disabled && b(d)) { const e = k(c, d); typeof a.callback === "function" && a.callback.apply(a, [e]), !1 === e.cancel && a.close(); break; } } } function T(a, b) { const c = a.srcElement || a.target; S(b, (a) => a.element === c && (Ja = !0)); } function U(a) { if (Ja) return void (Ja = !1); const b = p[p.length - 1]; const c = a.keyCode; return b.__internal.buttons.length === 0 && c === n.ESC && !0 === b.get("closable") ? (E(b), !1) : ya.indexOf(c) > -1 ? (S(b, (a) => a.key === c), !1) : void 0; } function V(a) { const b = p[p.length - 1]; const c = a.keyCode; if (c === n.LEFT || c === n.RIGHT) { for (let d = b.__internal.buttons, e = 0; e < d.length; e += 1) if (document.activeElement === d[e].element) switch (c) { case n.LEFT: return void d[(e || d.length) - 1].element.focus(); case n.RIGHT: return void d[(e + 1) % d.length].element.focus(); } } else if (c < n.F12 + 1 && c > n.F1 - 1 && ya.indexOf(c) > -1) return a.preventDefault(), a.stopPropagation(), S(b, (a) => a.key === c), !1; } function W(a, b) { if (b)b.focus(); else { const c = a.__internal.focus; let d = c.element; switch (typeof c.element) { case "number": a.__internal.buttons.length > c.element && (d = !0 === a.get("basic") ? a.elements.reset[0] : a.__internal.buttons[c.element].element); break; case "string": d = a.elements.body.querySelector(c.element); break; case "function": d = c.element.call(a); } void 0 !== d && d !== null || a.__internal.buttons.length !== 0 || (d = a.elements.reset[0]), d && d.focus && (d.focus(), c.select && d.select && d.select()); } } function X(a, b) { if (!b) for (let c = p.length - 1; c > -1; c -= 1) if (p[c].isModal()) { b = p[c]; break; } if (b && b.isModal()) { let d; const e = a.srcElement || a.target; const f = e === b.elements.reset[1] || b.__internal.buttons.length === 0 && e === document.body; f && (b.get("maximizable") ? d = b.elements.commands.maximize : b.get("closable") && (d = b.elements.commands.close)), void 0 === d && (typeof b.__internal.focus.element === "number" ? e === b.elements.reset[0] ? d = b.elements.buttons.auxiliary.firstChild || b.elements.buttons.primary.firstChild : f && (d = b.elements.reset[0]) : e === b.elements.reset[0] && (d = b.elements.buttons.primary.lastChild || b.elements.buttons.auxiliary.lastChild)), W(b, d); } } function Y(a, b) { clearTimeout(b.__internal.timerIn), W(b), t(), Ja = !1, l("onfocus", b), r(b.elements.dialog, s.type, b.__internal.transitionInHandler), c(b.elements.root, Da.animationIn); } function Z(a, b) { clearTimeout(b.__internal.timerOut), r(b.elements.dialog, s.type, b.__internal.transitionOutHandler), da(b), ja(b), b.isMaximized() && !b.get("startMaximized") && J(b), v.defaults.maintainFocus && b.__internal.activeElement && (b.__internal.activeElement.focus(), b.__internal.activeElement = null), typeof b.__internal.destroy === "function" && b.__internal.destroy.apply(b); } function $(a, b) { const c = a[Na] - La; let d = a[Oa] - Ma; Qa && (d -= document.body.scrollTop), b.style.left = `${c}px`, b.style.top = `${d}px`; } function _(a, b) { const c = a[Na] - La; let d = a[Oa] - Ma; Qa && (d -= document.body.scrollTop), b.style.left = `${Math.min(Pa.maxLeft, Math.max(Pa.minLeft, c))}px`, b.style.top = Qa ? `${Math.min(Pa.maxTop, Math.max(Pa.minTop, d))}px` : `${Math.max(Pa.minTop, d)}px`; } function aa(a, c) {
            if (Sa === null && !c.isMaximized() && c.get("movable")) {
                let d; let e = 0; let f = 0; if (a.type === "touchstart" ? (a.preventDefault(), d = a.targetTouches[0], Na = "clientX", Oa = "clientY") : a.button === 0 && (d = a), d) {
                    const g = c.elements.dialog; if (b(g, Da.capture), g.style.left && (e = parseInt(g.style.left, 10)), g.style.top && (f = parseInt(g.style.top, 10)), La = d[Na] - e, Ma = d[Oa] - f, c.isModal() ? Ma += c.elements.modal.scrollTop : c.isPinned() && (Ma -= document.body.scrollTop), c.get("moveBounded")) {
                        let h = g; let i = -e; let j = -f; do { i += h.offsetLeft, j += h.offsetTop; } while (h = h.offsetParent); Pa = {
                            maxLeft: i, minLeft: -i, maxTop: document.documentElement.clientHeight - g.clientHeight - j, minTop: -j,
                        }, Ra = _;
                    } else Pa = null, Ra = $; return l("onmove", c), Qa = !c.isModal() && c.isPinned(), Ka = c, Ra(d, g), b(document.body, Da.noSelection), !1;
                }
            }
        } function ba(a) { if (Ka) { let b; a.type === "touchmove" ? (a.preventDefault(), b = a.targetTouches[0]) : a.button === 0 && (b = a), b && Ra(b, Ka.elements.dialog); } } function ca() { if (Ka) { const a = Ka; Ka = Pa = null, c(document.body, Da.noSelection), c(a.elements.dialog, Da.capture), l("onmoved", a); } } function da(a) { Ka = null; const b = a.elements.dialog; b.style.left = b.style.top = ""; } function ea(a) { a.get("movable") ? (b(a.elements.root, Da.movable), a.isOpen() && qa(a)) : (da(a), c(a.elements.root, Da.movable), a.isOpen() && ra(a)); } function fa(a, b, c) { let e = b; let f = 0; let g = 0; do { f += e.offsetLeft, g += e.offsetTop; } while (e = e.offsetParent); let h; let i; !0 === c ? (h = a.pageX, i = a.pageY) : (h = a.clientX, i = a.clientY); const j = d(); if (j && (h = document.body.offsetWidth - h, isNaN(Ta) || (f = document.body.offsetWidth - f - b.offsetWidth)), b.style.height = `${i - g + Wa}px`, b.style.width = `${h - f + Wa}px`, !isNaN(Ta)) { let k = 0.5 * Math.abs(b.offsetWidth - Ua); j && (k *= -1), b.offsetWidth > Ua ? b.style.left = `${Ta + k}px` : b.offsetWidth >= Va && (b.style.left = `${Ta - k}px`); } } function ga(a, c) { if (!c.isMaximized()) { let d; if (a.type === "touchstart" ? (a.preventDefault(), d = a.targetTouches[0]) : a.button === 0 && (d = a), d) { l("onresize", c), Sa = c, Wa = c.elements.resizeHandle.offsetHeight / 2; const e = c.elements.dialog; return b(e, Da.capture), Ta = parseInt(e.style.left, 10), e.style.height = `${e.offsetHeight}px`, e.style.minHeight = `${c.elements.header.offsetHeight + c.elements.footer.offsetHeight}px`, e.style.width = `${Ua = e.offsetWidth}px`, e.style.maxWidth !== "none" && (e.style.minWidth = `${Va = e.offsetWidth}px`), e.style.maxWidth = "none", b(document.body, Da.noSelection), !1; } } } function ha(a) { if (Sa) { let b; a.type === "touchmove" ? (a.preventDefault(), b = a.targetTouches[0]) : a.button === 0 && (b = a), b && fa(b, Sa.elements.dialog, !Sa.get("modal") && !Sa.get("pinned")); } } function ia() { if (Sa) { const a = Sa; Sa = null, c(document.body, Da.noSelection), c(a.elements.dialog, Da.capture), Ga = !0, l("onresized", a); } } function ja(a) { Sa = null; const b = a.elements.dialog; b.style.maxWidth === "none" && (b.style.maxWidth = b.style.minWidth = b.style.width = b.style.height = b.style.minHeight = b.style.left = "", Ta = Number.Nan, Ua = Va = Wa = 0); } function ka(a) { a.get("resizable") ? (b(a.elements.root, Da.resizable), a.isOpen() && sa(a)) : (ja(a), c(a.elements.root, Da.resizable), a.isOpen() && ta(a)); } function la() { for (let a = 0; a < p.length; a += 1) { const b = p[a]; b.get("autoReset") && (da(b), ja(b)); } } function ma(b) { p.length === 1 && (q(a, "resize", la), q(document.body, "keyup", U), q(document.body, "keydown", V), q(document.body, "focus", X), q(document.documentElement, "mousemove", ba), q(document.documentElement, "touchmove", ba), q(document.documentElement, "mouseup", ca), q(document.documentElement, "touchend", ca), q(document.documentElement, "mousemove", ha), q(document.documentElement, "touchmove", ha), q(document.documentElement, "mouseup", ia), q(document.documentElement, "touchend", ia)), q(b.elements.commands.container, "click", b.__internal.commandsClickHandler), q(b.elements.footer, "click", b.__internal.buttonsClickHandler), q(b.elements.reset[0], "focus", b.__internal.resetHandler), q(b.elements.reset[1], "focus", b.__internal.resetHandler), Ja = !0, q(b.elements.dialog, s.type, b.__internal.transitionInHandler), b.get("modal") || oa(b), b.get("resizable") && sa(b), b.get("movable") && qa(b); } function na(b) { p.length === 1 && (r(a, "resize", la), r(document.body, "keyup", U), r(document.body, "keydown", V), r(document.body, "focus", X), r(document.documentElement, "mousemove", ba), r(document.documentElement, "mouseup", ca), r(document.documentElement, "mousemove", ha), r(document.documentElement, "mouseup", ia)), r(b.elements.commands.container, "click", b.__internal.commandsClickHandler), r(b.elements.footer, "click", b.__internal.buttonsClickHandler), r(b.elements.reset[0], "focus", b.__internal.resetHandler), r(b.elements.reset[1], "focus", b.__internal.resetHandler), q(b.elements.dialog, s.type, b.__internal.transitionOutHandler), b.get("modal") || pa(b), b.get("movable") && ra(b), b.get("resizable") && ta(b); } function oa(a) { q(a.elements.dialog, "focus", a.__internal.bringToFrontHandler, !0); } function pa(a) { r(a.elements.dialog, "focus", a.__internal.bringToFrontHandler, !0); } function qa(a) { q(a.elements.header, "mousedown", a.__internal.beginMoveHandler), q(a.elements.header, "touchstart", a.__internal.beginMoveHandler); } function ra(a) { r(a.elements.header, "mousedown", a.__internal.beginMoveHandler), r(a.elements.header, "touchstart", a.__internal.beginMoveHandler); } function sa(a) { q(a.elements.resizeHandle, "mousedown", a.__internal.beginResizeHandler), q(a.elements.resizeHandle, "touchstart", a.__internal.beginResizeHandler); } function ta(a) { r(a.elements.resizeHandle, "mousedown", a.__internal.beginResizeHandler), r(a.elements.resizeHandle, "touchstart", a.__internal.beginResizeHandler); } function ua(a) { q(a.elements.modal, "click", a.__internal.modalClickHandler); } function va(a) { r(a.elements.modal, "click", a.__internal.modalClickHandler); } let wa; let xa; var ya = []; var za = null; let Aa = !1; const Ba = a.navigator.userAgent.indexOf("Safari") > -1 && a.navigator.userAgent.indexOf("Chrome") < 0; var Ca = {
            dimmer: "<div class=\"ajs-dimmer\"></div>", modal: "<div class=\"ajs-modal\" tabindex=\"0\"></div>", dialog: "<div class=\"ajs-dialog\" tabindex=\"0\"></div>", reset: "<button class=\"ajs-reset\"></button>", commands: "<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>", header: "<div class=\"ajs-header\"></div>", body: "<div class=\"ajs-body\"></div>", content: "<div class=\"ajs-content\"></div>", footer: "<div class=\"ajs-footer\"></div>", buttons: { primary: "<div class=\"ajs-primary ajs-buttons\"></div>", auxiliary: "<div class=\"ajs-auxiliary ajs-buttons\"></div>" }, button: "<button class=\"ajs-button\"></button>", resizeHandle: "<div class=\"ajs-handle\"></div>",
        }; var Da = {
            animationIn: "ajs-in", animationOut: "ajs-out", base: "alertify", basic: "ajs-basic", capture: "ajs-capture", closable: "ajs-closable", fixed: "ajs-fixed", frameless: "ajs-frameless", hidden: "ajs-hidden", maximize: "ajs-maximize", maximized: "ajs-maximized", maximizable: "ajs-maximizable", modeless: "ajs-modeless", movable: "ajs-movable", noSelection: "ajs-no-selection", noOverflow: "ajs-no-overflow", noPadding: "ajs-no-padding", pin: "ajs-pin", pinnable: "ajs-pinnable", prefix: "ajs-", resizable: "ajs-resizable", restore: "ajs-restore", shake: "ajs-shake", unpinned: "ajs-unpinned",
        }; var Ea = ""; var Fa = 0; var Ga = !1; var Ha = 0; var Ia = 0; var Ja = !1; var Ka = null; var La = 0; var Ma = 0; var Na = "pageX"; var Oa = "pageY"; var Pa = null; var Qa = !1; var Ra = null; var Sa = null; var Ta = Number.Nan; var Ua = 0; var Va = 0; var Wa = 0; return {
            __init: m, isOpen() { return this.__internal.isOpen; }, isModal() { return this.elements.root.className.indexOf(Da.modeless) < 0; }, isMaximized() { return this.elements.root.className.indexOf(Da.maximized) > -1; }, isPinned() { return this.elements.root.className.indexOf(Da.unpinned) < 0; }, maximize() { return this.isMaximized() || I(this), this; }, restore() { return this.isMaximized() && J(this), this; }, pin() { return this.isPinned() || G(this), this; }, unpin() { return this.isPinned() && H(this), this; }, bringToFront() { return B(null, this), this; }, moveTo(a, b) { if (!isNaN(a) && !isNaN(b)) { l("onmove", this); const c = this.elements.dialog; let e = c; let f = 0; let g = 0; c.style.left && (f -= parseInt(c.style.left, 10)), c.style.top && (g -= parseInt(c.style.top, 10)); do { f += e.offsetLeft, g += e.offsetTop; } while (e = e.offsetParent); let h = a - f; const i = b - g; d() && (h *= -1), c.style.left = `${h}px`, c.style.top = `${i}px`, l("onmoved", this); } return this; }, resizeTo(a, b) { let c = parseFloat(a); let d = parseFloat(b); const e = /(\d*\.\d+|\d+)%/; if (!isNaN(c) && !isNaN(d) && !0 === this.get("resizable")) { l("onresize", this), (`${a}`).match(e) && (c = c / 100 * document.documentElement.clientWidth), (`${b}`).match(e) && (d = d / 100 * document.documentElement.clientHeight); const f = this.elements.dialog; f.style.maxWidth !== "none" && (f.style.minWidth = `${Va = f.offsetWidth}px`), f.style.maxWidth = "none", f.style.minHeight = `${this.elements.header.offsetHeight + this.elements.footer.offsetHeight}px`, f.style.width = `${c}px`, f.style.height = `${d}px`, l("onresized", this); } return this; }, setting(a, b) { const c = this; const d = D(this, this.__internal.options, (a, b, d) => { C(c, a, b, d); }, a, b); if (d.op === "get") return d.found ? d.value : void 0 !== this.settings ? D(this, this.settings, this.settingUpdated || (() => {}), a, b).value : void 0; if (d.op === "set") { if (d.items.length > 0) for (let e = this.settingUpdated || function () {}, f = 0; f < d.items.length; f += 1) { const g = d.items[f]; g.found || void 0 === this.settings || D(this, this.settings, e, g.key, g.value); } return this; } }, set(a, b) { return this.setting(a, b), this; }, get(a) { return this.setting(a); }, setHeader(b) { return typeof b === "string" ? (g(this.elements.header), this.elements.header.innerHTML = b) : b instanceof a.HTMLElement && this.elements.header.firstChild !== b && (g(this.elements.header), this.elements.header.appendChild(b)), this; }, setContent(b) { return typeof b === "string" ? (g(this.elements.content), this.elements.content.innerHTML = b) : b instanceof a.HTMLElement && this.elements.content.firstChild !== b && (g(this.elements.content), this.elements.content.appendChild(b)), this; }, showModal(a) { return this.show(!0, a); }, show(a, d) { if (m(this), this.__internal.isOpen) { da(this), ja(this), b(this.elements.dialog, Da.shake); const e = this; setTimeout(() => { c(e.elements.dialog, Da.shake); }, 200); } else { if (this.__internal.isOpen = !0, p.push(this), v.defaults.maintainFocus && (this.__internal.activeElement = document.activeElement), document.body.hasAttribute("tabindex") || document.body.setAttribute("tabindex", Aa = "0"), typeof this.prepare === "function" && this.prepare(), ma(this), void 0 !== a && this.set("modal", a), o(), u(), typeof d === "string" && d !== "" && (this.__internal.className = d, b(this.elements.root, d)), this.get("startMaximized") ? this.maximize() : this.isMaximized() && J(this), N(this), this.elements.root.removeAttribute("style"), c(this.elements.root, Da.animationOut), b(this.elements.root, Da.animationIn), clearTimeout(this.__internal.timerIn), this.__internal.timerIn = setTimeout(this.__internal.transitionInHandler, s.supported ? 1e3 : 100), Ba) { const f = this.elements.root; f.style.display = "none", setTimeout(() => { f.style.display = "block"; }, 0); }za = this.elements.root.offsetWidth, c(this.elements.root, Da.hidden), typeof this.hooks.onshow === "function" && this.hooks.onshow.call(this), l("onshow", this); } return this; }, close() { return this.__internal.isOpen && !1 !== l("onclosing", this) && (na(this), c(this.elements.root, Da.animationIn), b(this.elements.root, Da.animationOut), clearTimeout(this.__internal.timerOut), this.__internal.timerOut = setTimeout(this.__internal.transitionOutHandler, s.supported ? 1e3 : 100), b(this.elements.root, Da.hidden), za = this.elements.modal.offsetWidth, void 0 !== this.__internal.className && this.__internal.className !== "" && c(this.elements.root, this.__internal.className), typeof this.hooks.onclose === "function" && this.hooks.onclose.call(this), l("onclose", this), p.splice(p.indexOf(this), 1), this.__internal.isOpen = !1, u()), p.length || Aa !== "0" || document.body.removeAttribute("tabindex"), this; }, closeOthers() { return v.closeAll(this), this; }, destroy() { return this.__internal && (this.__internal.isOpen ? (this.__internal.destroy = function () { i(this, m); }, this.close()) : this.__internal.destroy || i(this, m)), this; },
        };
    }()); var u = (function () {
        function d(a) { a.__internal || (a.__internal = { position: v.defaults.notifier.position, delay: v.defaults.notifier.delay }, l = document.createElement("DIV"), h(a)), l.parentNode !== document.body && document.body.appendChild(l); } function e(a) { a.__internal.pushed = !0, m.push(a); } function f(a) { m.splice(m.indexOf(a), 1), a.__internal.pushed = !1; } function h(a) { switch (l.className = n.base, a.__internal.position) { case "top-right": b(l, `${n.top} ${n.right}`); break; case "top-left": b(l, `${n.top} ${n.left}`); break; case "top-center": b(l, `${n.top} ${n.center}`); break; case "bottom-left": b(l, `${n.bottom} ${n.left}`); break; case "bottom-center": b(l, `${n.bottom} ${n.center}`); break; default: case "bottom-right": b(l, `${n.bottom} ${n.right}`); } } function i(d, h) {
            function i(a, b) { b.__internal.closeButton && a.target.getAttribute("data-close") !== "true" || b.dismiss(!0); } function m(a, b) { r(b.element, s.type, m), l.removeChild(b.element); } function o(a) {
                return a.__internal || (a.__internal = {
                    pushed: !1, delay: void 0, timer: void 0, clickHandler: void 0, transitionEndHandler: void 0, transitionTimeout: void 0,
                }, a.__internal.clickHandler = j(a, i), a.__internal.transitionEndHandler = j(a, m)), a;
            } function p(a) { clearTimeout(a.__internal.timer), clearTimeout(a.__internal.transitionTimeout); } return o({
                element: d, push(a, c) { if (!this.__internal.pushed) { e(this), p(this); let d; let f; switch (arguments.length) { case 0: f = this.__internal.delay; break; case 1: typeof a === "number" ? f = a : (d = a, f = this.__internal.delay); break; case 2: d = a, f = c; } return this.__internal.closeButton = v.defaults.notifier.closeButton, void 0 !== d && this.setContent(d), u.__internal.position.indexOf("top") < 0 ? l.appendChild(this.element) : l.insertBefore(this.element, l.firstChild), k = this.element.offsetWidth, b(this.element, n.visible), q(this.element, "click", this.__internal.clickHandler), this.delay(f); } return this; }, ondismiss() {}, callback: h, dismiss(a) { return this.__internal.pushed && (p(this), typeof this.ondismiss === "function" && !1 === this.ondismiss.call(this) || (r(this.element, "click", this.__internal.clickHandler), void 0 !== this.element && this.element.parentNode === l && (this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, s.supported ? 1e3 : 100), c(this.element, n.visible), typeof this.callback === "function" && this.callback.call(this, a)), f(this))), this; }, delay(a) { if (p(this), this.__internal.delay = void 0 === a || isNaN(+a) ? u.__internal.delay : +a, this.__internal.delay > 0) { const b = this; this.__internal.timer = setTimeout(() => { b.dismiss(); }, 1e3 * this.__internal.delay); } return this; }, setContent(c) { if (typeof c === "string" ? (g(this.element), this.element.innerHTML = c) : c instanceof a.HTMLElement && this.element.firstChild !== c && (g(this.element), this.element.appendChild(c)), this.__internal.closeButton) { const d = document.createElement("span"); b(d, n.close), d.setAttribute("data-close", !0), this.element.appendChild(d); } return this; }, dismissOthers() { return u.dismissAll(this), this; },
            });
        } let k; let l; var m = []; var n = {
            base: "alertify-notifier", message: "ajs-message", top: "ajs-top", right: "ajs-right", bottom: "ajs-bottom", left: "ajs-left", center: "ajs-center", visible: "ajs-visible", hidden: "ajs-hidden", close: "ajs-close",
        }; return {
            setting(a, b) { if (d(this), void 0 === b) return this.__internal[a]; switch (a) { case "position": this.__internal.position = b, h(this); break; case "delay": this.__internal.delay = b; } return this; }, set(a, b) { return this.setting(a, b), this; }, get(a) { return this.setting(a); }, create(a, b) { d(this); const c = document.createElement("div"); return c.className = n.message + (typeof a === "string" && a !== "" ? ` ajs-${a}` : ""), i(c, b); }, dismissAll(a) { for (let b = m.slice(0), c = 0; c < b.length; c += 1) { const d = b[c]; void 0 !== a && a === d || d.dismiss(); } },
        };
    }()); var v = new m(); v.dialog("alert", () => ({
        main(a, b, c) { let d; let e; let f; switch (arguments.length) { case 1: e = a; break; case 2: typeof b === "function" ? (e = a, f = b) : (d = a, e = b); break; case 3: d = a, e = b, f = c; } return this.set("title", d), this.set("message", e), this.set("onok", f), this; },
        setup() {
            return {
                buttons: [{
                    text: v.defaults.glossary.ok, key: n.ESC, invokeOnClose: !0, className: v.defaults.theme.ok,
                }],
                focus: { element: 0, select: !1 },
                options: { maximizable: !1, resizable: !1 },
            };
        },
        build() {},
        prepare() {},
        setMessage(a) { this.setContent(a); },
        settings: { message: void 0, onok: void 0, label: void 0 },
        settingUpdated(a, b, c) { switch (a) { case "message": this.setMessage(c); break; case "label": this.__internal.buttons[0].element && (this.__internal.buttons[0].element.innerHTML = c); } },
        callback(a) { if (typeof this.get("onok") === "function") { const b = this.get("onok").call(this, a); void 0 !== b && (a.cancel = !b); } },
    })), v.dialog("confirm", () => {
        function a(a) { c.timer !== null && (clearInterval(c.timer), c.timer = null, a.__internal.buttons[c.index].element.innerHTML = c.text); } function b(b, d, e) { a(b), c.duration = e, c.index = d, c.text = b.__internal.buttons[d].element.innerHTML, c.timer = setInterval(j(b, c.task), 1e3), c.task(null, b); } var c = {
            timer: null, index: null, text: null, duration: null, task(b, d) { if (d.isOpen()) { if (d.__internal.buttons[c.index].element.innerHTML = `${c.text} (&#8207;${c.duration}&#8207;) `, c.duration -= 1, c.duration === -1) { a(d); const e = d.__internal.buttons[c.index]; const f = k(c.index, e); typeof d.callback === "function" && d.callback.apply(d, [f]), !1 !== f.close && d.close(); } } else a(d); },
        }; return {
            main(a, b, c, d) {
                let e; let f; let g; let h; switch (arguments.length) {
                case 1: f = a; break; case 2: f = a, g = b; break; case 3: f = a, g = b, h = c; break;
                case 4: e = a, f = b, g = c, h = d;
                } return this.set("title", e), this.set("message", f), this.set("onok", g), this.set("oncancel", h), this;
            },
            setup() {
                return {
                    buttons: [{ text: v.defaults.glossary.ok, key: n.ENTER, className: v.defaults.theme.ok }, {
                        text: v.defaults.glossary.cancel, key: n.ESC, invokeOnClose: !0, className: v.defaults.theme.cancel,
                    }],
                    focus: { element: 0, select: !1 },
                    options: { maximizable: !1, resizable: !1 },
                };
            },
            build() {},
            prepare() {},
            setMessage(a) { this.setContent(a); },
            settings: {
                message: null, labels: null, onok: null, oncancel: null, defaultFocus: null, reverseButtons: null,
            },
            settingUpdated(a, b, c) { switch (a) { case "message": this.setMessage(c); break; case "labels": "ok" in c && this.__internal.buttons[0].element && (this.__internal.buttons[0].text = c.ok, this.__internal.buttons[0].element.innerHTML = c.ok), "cancel" in c && this.__internal.buttons[1].element && (this.__internal.buttons[1].text = c.cancel, this.__internal.buttons[1].element.innerHTML = c.cancel); break; case "reverseButtons": !0 === c ? this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element) : this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element); break; case "defaultFocus": this.__internal.focus.element = c === "ok" ? 0 : 1; } },
            callback(b) { a(this); let c; switch (b.index) { case 0: typeof this.get("onok") === "function" && void 0 !== (c = this.get("onok").call(this, b)) && (b.cancel = !c); break; case 1: typeof this.get("oncancel") === "function" && void 0 !== (c = this.get("oncancel").call(this, b)) && (b.cancel = !c); } },
            autoOk(a) { return b(this, 0, a), this; },
            autoCancel(a) { return b(this, 1, a), this; },
        };
    }), v.dialog("prompt", () => {
        const b = document.createElement("INPUT"); const c = document.createElement("P"); return {
            main(a, b, c, d, e) { let f; let g; let h; let i; let j; switch (arguments.length) { case 1: g = a; break; case 2: g = a, h = b; break; case 3: g = a, h = b, i = c; break; case 4: g = a, h = b, i = c, j = d; break; case 5: f = a, g = b, h = c, i = d, j = e; } return this.set("title", f), this.set("message", g), this.set("value", h), this.set("onok", i), this.set("oncancel", j), this; },
            setup() {
                return {
                    buttons: [{ text: v.defaults.glossary.ok, key: n.ENTER, className: v.defaults.theme.ok }, {
                        text: v.defaults.glossary.cancel, key: n.ESC, invokeOnClose: !0, className: v.defaults.theme.cancel,
                    }],
                    focus: { element: b, select: !0 },
                    options: { maximizable: !1, resizable: !1 },
                };
            },
            build() { b.className = v.defaults.theme.input, b.setAttribute("type", "text"), b.value = this.get("value"), this.elements.content.appendChild(c), this.elements.content.appendChild(b); },
            prepare() {},
            setMessage(b) { typeof b === "string" ? (g(c), c.innerHTML = b) : b instanceof a.HTMLElement && c.firstChild !== b && (g(c), c.appendChild(b)); },
            settings: {
                message: void 0, labels: void 0, onok: void 0, oncancel: void 0, value: "", type: "text", reverseButtons: void 0,
            },
            settingUpdated(a, c, d) { switch (a) { case "message": this.setMessage(d); break; case "value": b.value = d; break; case "type": switch (d) { case "text": case "color": case "date": case "datetime-local": case "email": case "month": case "number": case "password": case "search": case "tel": case "time": case "week": b.type = d; break; default: b.type = "text"; } break; case "labels": d.ok && this.__internal.buttons[0].element && (this.__internal.buttons[0].element.innerHTML = d.ok), d.cancel && this.__internal.buttons[1].element && (this.__internal.buttons[1].element.innerHTML = d.cancel); break; case "reverseButtons": !0 === d ? this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element) : this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element); } },
            callback(a) { let c; switch (a.index) { case 0: this.settings.value = b.value, typeof this.get("onok") === "function" && void 0 !== (c = this.get("onok").call(this, a, this.settings.value)) && (a.cancel = !c); break; case 1: typeof this.get("oncancel") === "function" && void 0 !== (c = this.get("oncancel").call(this, a)) && (a.cancel = !c), a.cancel || (b.value = this.settings.value); } },
        };
    }), typeof module === "object" && typeof module.exports === "object" ? module.exports = v : typeof define === "function" && define.amd ? define([], () => v) : a.alertify || (a.alertify = v);
}(typeof window !== "undefined" ? window : this));
